<script>
    $(document).ready(function(){
        /* Apply css based on depth of a post */
        $('div[depth]').each(function() {
            // Odd level posts/comments get white background
            if($(this).attr('depth')%2 != 0 ){
                $(this).css('background', '#ffffff')
            }
            // Even level posts/comments get light grey background
            else {
                $(this).css('background', '#f7f7f7')
            }
        });

        // This initial toggle hides comments
        $(".post[depth='2']").toggle();


        // This assigns the onclick functions for showing/hiding comments
        $(".post[depth='1']").each(function(){
            var parent = $(this);
            $(this).find('.show_hide').click(function(){
                if($(this).hasClass('hiding')){
                    $(this).text('Hide comments');
                    parent.find("[depth='2']").show();
                    $(this).removeClass('hiding');
                    $(this).addClass('showing');

                }
                else{
                    $(this).text('Show comments');
                    parent.find("[depth='2']").hide();
                    $(this).removeClass('showing');
                    $(this).addClass('hiding');
                }
                return false; // Return false so page won't refresh (since this is an anchor tag)
            });

        });
    });
</script>

<h1>PostIt</h1>

<%= form_tag("/posts", :method => "get") do %>
    <%= label_tag(:q, "Search for:") %>
    <%= text_field_tag(:q) %>
    <%= submit_tag("Search") %>
<% end %>
<br/>

<div class="post_container">
  <% if params[:q] %>
    <% posts = Post.all(:order => "updated_at DESC", :conditions => "(content LIKE '%" + params[:q] + "%'" +
    " OR category_id IN (SELECT id FROM Categories WHERE name LIKE '%" + params[:q] + "%')" +
    " OR user_id IN (SELECT id FROM Users WHERE username LIKE '%" + params[:q] + "%')) AND post_id IS NULL") %>
  <% else %>
    <% posts = Post.all(:order => "updated_at DESC", :conditions => "post_id IS NULL") %>
  <% end %>

  <% posts.each do |post| %>
  <!-- render top level posts -->
  <%= render post, :post => post %>  <!-- depth variable is used to assign a custom attribute to apply css -->
  <% end %>

</div>

